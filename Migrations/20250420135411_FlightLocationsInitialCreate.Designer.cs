// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TravelBridgeAPI.Data;

#nullable disable

namespace TravelBridgeAPI.Migrations
{
    [DbContext(typeof(FlightLocationsContext))]
    [Migration("20250420135411_FlightLocationsInitialCreate")]
    partial class FlightLocationsInitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TravelBridgeAPI.Models.FlightLocations.Datum", b =>
                {
                    b.Property<string>("id")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Keyword")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("city")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("countryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("countryNameShort")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("parent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("photoUri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("regionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("Keyword");

                    b.ToTable("Data");
                });

            modelBuilder.Entity("TravelBridgeAPI.Models.FlightLocations.Distancetocity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DatumId")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("value")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("DatumId")
                        .IsUnique();

                    b.ToTable("DistancesToCity");
                });

            modelBuilder.Entity("TravelBridgeAPI.Models.FlightLocations.Rootobject", b =>
                {
                    b.Property<string>("Keyword")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<long>("timestamp")
                        .HasColumnType("bigint");

                    b.HasKey("Keyword");

                    b.ToTable("Rootobjects");
                });

            modelBuilder.Entity("TravelBridgeAPI.Models.FlightLocations.Datum", b =>
                {
                    b.HasOne("TravelBridgeAPI.Models.FlightLocations.Rootobject", "rootobject")
                        .WithMany("data")
                        .HasForeignKey("Keyword")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("rootobject");
                });

            modelBuilder.Entity("TravelBridgeAPI.Models.FlightLocations.Distancetocity", b =>
                {
                    b.HasOne("TravelBridgeAPI.Models.FlightLocations.Datum", "Datum")
                        .WithOne("distanceToCity")
                        .HasForeignKey("TravelBridgeAPI.Models.FlightLocations.Distancetocity", "DatumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Datum");
                });

            modelBuilder.Entity("TravelBridgeAPI.Models.FlightLocations.Datum", b =>
                {
                    b.Navigation("distanceToCity");
                });

            modelBuilder.Entity("TravelBridgeAPI.Models.FlightLocations.Rootobject", b =>
                {
                    b.Navigation("data");
                });
#pragma warning restore 612, 618
        }
    }
}
